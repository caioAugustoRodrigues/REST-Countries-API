{"version":3,"sources":["components/list/index.jsx","components/filter/text/index.jsx","components/filter/select/index.jsx","components/filter/index.jsx","pages/home/index.jsx","pages/details/index.jsx","components/theme-toggler/index.jsx","components/navbar/index.jsx","index.js"],"names":["Countries","filter","useState","countries","setCountries","newFilter","useEffect","getCountries","filters","a","axios","get","res","data","CountryCard","map","country","to","alpha3Code","key","className","src","flag","alt","name","population","region","capital","TextFilter","setName","setNames","handleText","type","placeholder","onChange","e","target","value","SelectFilter","newRegion","option","setOption","handleRegion","defaultValue","id","Filters","newName","Home","setFilter","Details","countryCode","setCountry","currencies","setCurrency","languages","setLanguages","borderingCountries","setBorderingCountries","countryToDetail","getCountry","handleNeighbours","borders","getNeighbour","neighbour","then","neighbours","Neighbours","Country","currency","language","nativeName","subregion","topLevelDomain","Fragment","code","handleCurrencies","handleLanguages","ThemeToggler","body","document","isDark","onClick","setAttribute","NavBar","root","getElementById","ReactDOM","render","StrictMode","path"],"mappings":"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","file":"static/js/main.c32c5096.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from '@reach/router';\r\nimport axios from 'axios';\r\n\r\nexport default function Countries({ filter }) {\r\n    const [countries, setCountries] = useState();\r\n    let newFilter = filter;\r\n\r\n    useEffect(() => {\r\n        getCountries(newFilter);\r\n    }, [newFilter])\r\n    \r\n    let getCountries = async (filters) => {\r\n        let res = await axios.get(`https://restcountries.eu/rest/v2/${filters}`);\r\n        setCountries(res.data)\r\n    }\r\n\r\n    function CountryCard() {\r\n        if (countries) {\r\n            return (\r\n                <>\r\n                    {countries.map(country => (\r\n                        <Link to={`details/${country.alpha3Code}`} key={country.alpha3Code}>\r\n                            <li className=\"countries__country\" >\r\n                                <img src={country.flag} alt=\"\" className=\"countries__country__flag\"/>\r\n                                <h3 className=\"countries__country__name\">{country.name}</h3>\r\n                                <h4 className=\"countries__country__unit\">\r\n                                    Population: <span className=\"countries__country__unit__value\">{country.population}</span>\r\n                                </h4>\r\n\r\n                                <h4 className=\"countries__country__unit\">\r\n                                    Region: <span className=\"countries__country__unit__value\">{country.region}</span>\r\n                                </h4>\r\n\r\n                                <h4 className=\"countries__country__unit\">\r\n                                    Capital: <span className=\"countries__country__unit__value\">{country.capital}</span>\r\n                                </h4>\r\n                            </li>\r\n                        </Link>\r\n                    ))}\r\n                </>\r\n            )\r\n        } else {\r\n            return (\r\n                <li className=\"countries__country\">\r\n                    <h2>No countries found(maybe check spelling?)</h2>\r\n                </li>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ul className=\"countries\"\r\n        >\r\n            <CountryCard />\r\n        </ul>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nexport default function TextFilter({ setName }) {\r\n    const [name, setNames] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        handleText(name);\r\n    }, [name])\r\n    \r\n    function handleText(name) {\r\n        setName(name);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <input \r\n                type=\"text\"\r\n                placeholder=\"Search for a country...\"\r\n                onChange={e => setNames(e.target.value)}\r\n            />\r\n        </>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\n\r\nexport default function SelectFilter({ newRegion }) {\r\n    const [option, setOption] = useState(\"\");\r\n\r\n    \r\n    useEffect(() => {\r\n        handleRegion(option);\r\n    }, [option])\r\n    \r\n    function handleRegion(option) {\r\n        newRegion(option);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form>\r\n                <select \r\n                    name=\"region\"\r\n                    defaultValue=\"all\"\r\n                    id=\"region\"\r\n                    onChange={e => setOption(e.target.value)}\r\n                >\r\n                    <option value=\"all\">Filter by Region</option>\r\n                    <option value=\"region/africa\">Africa</option>\r\n                    <option value=\"region/americas\">America</option>\r\n                    <option value=\"region/asia\">Asia</option>\r\n                    <option value=\"region/europe\">Europe</option>\r\n                    <option value=\"region/oceania\">Oceania</option>\r\n                </select>\r\n            </form>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport TextFilter from './text';\r\nimport SelectFilter from './select';\r\n\r\nexport default function Filters({ filter }) {\r\n\r\n    function setName(newName) {\r\n        if (newName) {\r\n            filter(`name/${newName}`);\r\n        } else {\r\n            filter(\"all\");\r\n        }\r\n    }\r\n\r\n    function newRegion(newRegion) {\r\n        filter(newRegion);\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <TextFilter \r\n                setName={setName} \r\n            />\r\n\r\n            <SelectFilter \r\n                newRegion={newRegion}\r\n            />\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react';\nimport Countries from '../../components/list';\nimport Filter from '../../components/filter';\n\n\nexport default function Home() {\n  const [filter, setFilter] = useState(\"all\");\n\n  return (\n    <>\n\n      <main>\n        <Filter filter={setFilter}/>\n        <Countries filter={filter}/>\n      </main>\n    </>\n  );\n}\n\n \n","import React from 'react';\r\nimport { Link } from '@reach/router';\r\nimport axios from 'axios';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nexport default function Details({ countryCode }) {\r\n    const [country, setCountry] = useState();\r\n    const [currencies, setCurrency] = useState();\r\n    const [languages, setLanguages] = useState();\r\n    const [borderingCountries, setBorderingCountries] = useState([]);\r\n\r\n    let countryToDetail = countryCode;\r\n\r\n    useEffect(() => {\r\n        getCountry(countryToDetail);\r\n    }, [countryToDetail])\r\n\r\n    let getCountry = async (filter) => {\r\n        let res = await axios.get(`https://restcountries.eu/rest/v2/alpha/${filter}`);\r\n        setCountry(res.data);\r\n        setCurrency(res.data.currencies);\r\n        setLanguages(res.data.languages);\r\n        handleNeighbours(res.data.borders);\r\n    }\r\n\r\n    let getNeighbour = async (neighbour) => {\r\n        let res = await axios.get(`https://restcountries.eu/rest/v2/alpha/${neighbour}`)\r\n            .then(res => {\r\n                const neighbour = {\r\n                    name: res.data.name,\r\n                    id: res.data.alpha3Code\r\n                }\r\n                setBorderingCountries(borderingCountries => [...borderingCountries, neighbour]);\r\n            });\r\n    }\r\n\r\n\r\n    function handleCurrencies(currencies) {\r\n        if (currencies) {\r\n            return (\r\n                <>\r\n                    {currencies.map(currency => (\r\n                        <React.Fragment key={currency.code}>{currency.name}</React.Fragment>\r\n                    ))}\r\n                </>\r\n            ) \r\n        } else {\r\n            return (\r\n                <React.Fragment>This country has no currencies</React.Fragment>\r\n            )\r\n        }\r\n    }\r\n\r\n    function handleLanguages(languages) {\r\n        if (languages) {\r\n            return (\r\n                <>\r\n                    {languages.map(language => (\r\n                        <React.Fragment key={language.name}>{language.name}</React.Fragment>\r\n                    ))}\r\n                </>\r\n            ) \r\n        } else {\r\n            return (\r\n                <React.Fragment>This country has no language</React.Fragment>\r\n            )\r\n        }\r\n    }\r\n\r\n    function handleNeighbours(neighbours) {\r\n        if(neighbours) {\r\n            return (\r\n                <>\r\n                    {neighbours.map(neighbour => {\r\n                        getNeighbour(neighbour)\r\n                    })}\r\n                </>\r\n            )\r\n        } else {\r\n            neighbours = false;\r\n        }\r\n    }\r\n\r\n    function Neighbours({ neighbours }) {\r\n        if (neighbours) {\r\n            return (\r\n                <>\r\n                    {neighbours.map(neighbour => (\r\n                        <li key={neighbour.id}>{neighbour.name}</li>\r\n                    ))}\r\n                </>\r\n            )\r\n        } else {\r\n            return (\r\n                <h3>This country has no bordering nations.</h3>\r\n            )\r\n        }\r\n    }\r\n\r\n    function Country({ country, currency, language, borders }) {\r\n        \r\n        if (country) {\r\n            let currencies = currency;\r\n            let languages = language;\r\n            let borderingCountries = borders;\r\n\r\n            return (\r\n                <>\r\n                    <div className=\"country\">\r\n                        <img src={country.flag} alt=\"Country flag\" className=\"country__flag\"/>\r\n\r\n                        <h2 className=\"country__name\">{country.name}</h2>\r\n\r\n                        <ul className=\"country__data\">\r\n                            <li className=\"country__data__unit\">\r\n                                Native Name:\r\n                                <span className=\"country__data__unit__value\">{country.nativeName}</span>\r\n                            </li>\r\n\r\n                            <li className=\"country__data__unit\">\r\n                                Population:\r\n                                <span className=\"country__data__unit__value\">{country.population}</span>\r\n                            </li>\r\n\r\n                            <li className=\"country__data__unit\">\r\n                                Region:\r\n                                <span className=\"country__data__unit__value\">{country.region}</span>\r\n                            </li>\r\n\r\n                            <li className=\"country__data__unit\">\r\n                                Sub Region:\r\n                                <span className=\"country__data__unit__value\">{country.subregion}</span>\r\n                            </li>\r\n                            \r\n                            <li className=\"country__data__unit\">\r\n                                Capital:\r\n                                <span className=\"country__data__unit__value\">{country.capital}</span>\r\n                            </li>\r\n\r\n                            <li className=\"country__data__unit\">\r\n                                Top Level Domain:\r\n                                <span className=\"country__data__unit__value\">{country.topLevelDomain}</span>\r\n                            </li>\r\n\r\n                            <li className=\"country__data__unit\">\r\n                                Currencies:\r\n                                <span className=\"country__data__unit__value\">{handleCurrencies(currencies)}</span>\r\n                            </li>\r\n\r\n                            <li className=\"country__data__unit\">\r\n                                Languages:\r\n                                <span className=\"country__data__unit__value\">{handleLanguages(languages)}</span>\r\n                            </li>\r\n                        </ul>\r\n\r\n                        <ul className=\"country__neighbours\">\r\n                            <h4 className=\"country__neighbours__title\">Border Countries:</h4>\r\n                            \r\n                            <Neighbours neighbours={borderingCountries}/>\r\n                        </ul>\r\n                    </div>\r\n                </>\r\n            )\r\n        } else {\r\n            return (\r\n                <h3>Country not found</h3>\r\n            )\r\n        }\r\n    }\r\n    \r\n    \r\n    return (\r\n        <>\r\n            <Link to=\"/\">\r\n                <button>← Back</button>\r\n            </Link>\r\n\r\n            <Country \r\n                country={country} \r\n                currency={currencies}\r\n                language={languages}\r\n                borders={borderingCountries}\r\n            />\r\n        </>\r\n    )\r\n}","import React from 'react';\r\n\r\n\r\nexport default function ThemeToggler() {\r\n    const body = document.body;\r\n    let isDark = true;\r\n    \r\n    function switchTheme() {\r\n        if (!isDark) {\r\n            body.setAttribute('id', 'dark');\r\n            isDark = true;\r\n        } else if (isDark) {\r\n            body.setAttribute('id', 'light');\r\n            isDark = false;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h4 id=\"theme-switcher\" onClick={switchTheme}>Dark Mode</h4>\r\n        </>\r\n    )\r\n\r\n\r\n    \r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ThemeToggler from '../theme-toggler/';\r\n\r\nexport default function NavBar() {\r\n    return (\r\n        <header className=\"nav\">\r\n            <h1 className=\"nav__title\">Where in the world?</h1>\r\n            <ThemeToggler />\r\n        </header>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from '@reach/router';\nimport './css/main.css';\nimport Home from './pages/home';\nimport Details from './pages/details';\nimport Navbar from './components/navbar';\n\nconst root = document.getElementById('root');\n\nReactDOM.render(\n  <React.StrictMode>\n    <Navbar />\n    <Router>\n      <Home path=\"/\" />\n      <Details path=\"/details/:countryCode\"/>\n    </Router>\n  </React.StrictMode>,\n  root\n);\n\n"],"sourceRoot":""}